-- Scenario 1

SET SERVEROUTPUT ON;

-- Function calculateAge
CREATE OR REPLACE FUNCTION CalculateAge (
    p_dob DATE
) RETURN NUMBER IS
    v_age NUMBER;
BEGIN
    v_age := FLOOR(MONTHS_BETWEEN(SYSDATE, p_dob) / 12);
    RETURN v_age;
END CalculateAge;
/

-- Running the function.
SELECT Name, DOB, CalculateAge(DOB) AS Age
FROM Customers;

-- Scenario 2

SET SERVEROUTPUT ON;

-- Create function to calculate monthly interest
CREATE OR REPLACE FUNCTION CalculateMonthlyInstallment (
    p_loan_amount   NUMBER,
    p_interest_rate NUMBER,  
    p_duration_years NUMBER
) RETURN NUMBER IS
    v_monthly_rate NUMBER;
    v_total_months NUMBER;
    v_emi NUMBER;
BEGIN
    v_monthly_rate := p_interest_rate / 12 / 100;
    v_total_months := p_duration_years * 12;

    IF v_monthly_rate = 0 THEN
        v_emi := p_loan_amount / v_total_months;
    ELSE
        v_emi := (p_loan_amount * v_monthly_rate * POWER(1 + v_monthly_rate, v_total_months)) /
                 (POWER(1 + v_monthly_rate, v_total_months) - 1);
    END IF;

    RETURN ROUND(v_emi, 2);
END;
/

-- trying the function

DECLARE
    emi NUMBER;
BEGIN
    emi := CalculateMonthlyInstallment(100000, 14, 2); -- â‚¹100000 loan, 14% interest, 2 years
    DBMS_OUTPUT.PUT_LINE('Monthly EMI:' || emi || 'Rs.');
END;
/


